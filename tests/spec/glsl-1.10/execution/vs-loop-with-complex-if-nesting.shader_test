# Check that a loop containing a "break" statement in a complex
# nesting of "if" statements is properly handled by the compiler.

[require]
GLSL >= 1.10

[vertex shader]
attribute vec4 piglit_vertex;
varying vec4 color;
uniform int bound_1;
uniform int bound_2;
uniform ivec3 expected_totals;

void main()
{
  ivec3 totals = ivec3(0);
  int j = 0;
  for (int i = 0; i < 2; ) {
    i++;
    j++;
    totals.x += j;
    if (j >= bound_1) {
      if (j >= bound_2)
        break;
      else
        totals.y += j;
    } else {
      totals.z += j;
    }
  }
  gl_Position = piglit_vertex;
  if (totals == expected_totals)
    color = vec4(0.0, 1.0, 0.0, 1.0);
  else
    color = vec4(1.0, 0.0, 0.0, 1.0);
}

[fragment shader]
varying vec4 color;

void main()
{
  gl_FragColor = color;
}

[test]
uniform int bound_1 1
uniform int bound_2 1
uniform ivec3 expected_totals 1 0 0
draw rect -1 -1 1 1
uniform int bound_1 1
uniform int bound_2 2
uniform ivec3 expected_totals 3 1 0
draw rect -1 0 1 1
uniform int bound_1 2
uniform int bound_2 1
uniform ivec3 expected_totals 3 0 1
draw rect 0 -1 1 1
uniform int bound_1 2
uniform int bound_2 2
uniform ivec3 expected_totals 3 0 1
draw rect 0 0 1 1
probe all rgba 0 1 0 1
